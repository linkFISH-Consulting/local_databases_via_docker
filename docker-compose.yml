
# Set the stack name
name: lf_dev

services:
  postgres:
    image: postgres:15
    container_name: lf_dev_postgres
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./ingest/:/ingest/

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    platform: linux/amd64
    # on arm macos we have two options: emulate the platform (slow) or use another image.
    # unfortunately, `mcr.microsoft.com/azure-sql-edge:latest` has no support for
    # common language runtime (CLR) which we need for date formatting.
    # Note: to get emulation working proper, you need to enable rosetta
    # in docker desktop settings: https://stackoverflow.com/a/75975040/22346289
    container_name: lf_dev_mssql
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "BetterUseP0stgres!"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 'BetterUseP0stgres!' -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mssqldata:/var/opt/mssql
      - ./ingest/:/ingest/

  s3:
    # this image uses scratch as base, so we have no shell, only the `garage` binary
    # to create a bucket and get credentials, you need to run: ./s3/init_s3.sh
    image: dxflrs/garage:v2.1.0
    container_name: lf_dev_s3
    environment:
      GARAGE_API_ADMIN_TOKEN: "admin-token"
    ports:
      - "3900:3900"   # S3 API
      - "3901:3901"   # Admin API
    volumes:
      # PS 2025-09-18: I like using the volumes for easy reset
      # but for s3 it might be convenient to persist bucket and key config.
      # maybe we can split the data and meta into their own volumes, or keep meta in
      # in folder mount:
      # - ./s3/meta:/var/lib/garage/meta
      # - ./s3/data:/var/lib/garage/data
      - s3data:/var/lib/garage
      - ./s3/garage.toml:/etc/garage.toml:ro
    command: ["/garage", "server"]

volumes:
  s3data:
  pgdata:
  mssqldata:
